{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0439\\u0434\\u0430\\u0440\\u0431\\u0435\\u043A\\\\Documents\\\\SpringBootProjects\\\\frontend-react\\\\src\\\\components\\\\CreateSongForm.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nconst CreateSongForm = () => {\n  const [title, setTitle] = useState('');\n  const [artist, setArtist] = useState('');\n  const [album, setAlbum] = useState('');\n  const [genre, setGenre] = useState('');\n  const [songFile, setSongFile] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const formData = new FormData();\n    formData.append('songFile', songFile);\n    formData.append('imageFile', imageFile);\n    formData.append('title', title);\n    formData.append('artist', artist);\n    formData.append('album', album);\n    formData.append('genre', genre);\n    try {\n      const response = await axios.post('http://localhost:8083/songs', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}` // Add the authorization header\n        }\n      });\n\n      console.log('Song created successfully:', response.data);\n      setIsLoading(false);\n      setErrorMessage('');\n      // Handle success or display a success message to the user\n    } catch (error) {\n      setIsLoading(false);\n      if (error.response && error.response.data) {\n        setErrorMessage(error.response.data);\n      } else {\n        setErrorMessage('Failed to create song. Please try again later.');\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: artist,\n    onChange: e => setArtist(e.target.value),\n    placeholder: \"Artist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: album,\n    onChange: e => setAlbum(e.target.value),\n    placeholder: \"Album\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: genre,\n    onChange: e => setGenre(e.target.value),\n    placeholder: \"Genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"songFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Select Song File:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: e => setSongFile(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"imageFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Select Image File:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: e => setImageFile(e.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, isLoading ? 'Creating...' : 'Create Song'), errorMessage && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 30\n    }\n  }, errorMessage));\n};\nexport default CreateSongForm;","map":{"version":3,"names":["React","useState","axios","CreateSongForm","title","setTitle","artist","setArtist","album","setAlbum","genre","setGenre","songFile","setSongFile","imageFile","setImageFile","isLoading","setIsLoading","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","formData","FormData","append","response","post","headers","token","console","log","data","error","createElement","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","htmlFor","files","disabled"],"sources":["C:/Users/Айдарбек/Documents/SpringBootProjects/frontend-react/src/components/CreateSongForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CreateSongForm = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [artist, setArtist] = useState('');\r\n    const [album, setAlbum] = useState('');\r\n    const [genre, setGenre] = useState('');\r\n    const [songFile, setSongFile] = useState(null);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        const formData = new FormData();\r\n        formData.append('songFile', songFile);\r\n        formData.append('imageFile', imageFile);\r\n        formData.append('title', title);\r\n        formData.append('artist', artist);\r\n        formData.append('album', album);\r\n        formData.append('genre', genre);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8083/songs', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${token}`, // Add the authorization header\r\n                },\r\n            });\r\n\r\n            console.log('Song created successfully:', response.data);\r\n            setIsLoading(false);\r\n            setErrorMessage('');\r\n            // Handle success or display a success message to the user\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            if (error.response && error.response.data) {\r\n                setErrorMessage(error.response.data);\r\n            } else {\r\n                setErrorMessage('Failed to create song. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Title\" />\r\n            <input type=\"text\" value={artist} onChange={(e) => setArtist(e.target.value)} placeholder=\"Artist\" />\r\n            <input type=\"text\" value={album} onChange={(e) => setAlbum(e.target.value)} placeholder=\"Album\" />\r\n            <input type=\"text\" value={genre} onChange={(e) => setGenre(e.target.value)} placeholder=\"Genre\" />\r\n            <label htmlFor=\"songFile\">Select Song File:</label>\r\n            <input type=\"file\" onChange={(e) => setSongFile(e.target.files[0])} />\r\n            <label htmlFor=\"imageFile\">Select Image File:</label>\r\n            <input type=\"file\" onChange={(e) => setImageFile(e.target.files[0])} />\r\n            <button type=\"submit\" disabled={isLoading}>\r\n                {isLoading ? 'Creating...' : 'Create Song'}\r\n            </button>\r\n            {errorMessage && <p>{errorMessage}</p>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CreateSongForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}