{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0439\\u0434\\u0430\\u0440\\u0431\\u0435\\u043A\\\\Documents\\\\SpringBootProjects\\\\frontend-react\\\\src\\\\components\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport logo from \"../logo.svg\";\nimport './App.css';\nimport SongPlayer from \"./SongPlayer\";\nconst App = () => {\n  // State to store the song URL received from the backend\n  const [songUrl, setSongUrl] = useState(null);\n\n  // Function to fetch the song URL from the backend\n  const fetchSongUrl = () => {\n    // Replace this with your actual API endpoint to fetch the song URL from the backend\n    fetch(\"http://localhost:8083/songs/1/stream\").then(response => response.json()).then(data => {\n      // Assuming the song URL is in the \"url\" field of the response data\n      setSongUrl(data.url);\n    }).catch(error => {\n      console.error(\"Error fetching song URL:\", error);\n    });\n  };\n\n  // Fetch the song URL when the component mounts\n  useEffect(() => {\n    fetchSongUrl();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    pageTitle: \"Frontend client connected to Keycloak\",\n    logoSrc: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SongPlayer, {\n    songUrl: songUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  })))));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Header","logo","SongPlayer","App","songUrl","setSongUrl","fetchSongUrl","fetch","then","response","json","data","url","catch","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","pageTitle","logoSrc"],"sources":["C:/Users/Айдарбек/Documents/SpringBootProjects/frontend-react/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport logo from '../logo.svg';\nimport './App.css';\nimport SongPlayer from \"./SongPlayer\";\n\nconst App = () => {\n    // State to store the song URL received from the backend\n    const [songUrl, setSongUrl] = useState(null);\n\n    // Function to fetch the song URL from the backend\n    const fetchSongUrl = () => {\n        // Replace this with your actual API endpoint to fetch the song URL from the backend\n        fetch(\"http://localhost:8083/songs/1/stream\")\n            .then((response) => response.json())\n            .then((data) => {\n                // Assuming the song URL is in the \"url\" field of the response data\n                setSongUrl(data.url);\n            })\n            .catch((error) => {\n                console.error(\"Error fetching song URL:\", error);\n            });\n    };\n\n    // Fetch the song URL when the component mounts\n    useEffect(() => {\n        fetchSongUrl();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Header pageTitle=\"Frontend client connected to Keycloak\" logoSrc={logo} />\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <SongPlayer songUrl={songUrl} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,OAAAC,IAAA;AAE1C,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc;AAErC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACvB;IACAC,KAAK,CAAC,sCAAsC,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ;MACAN,UAAU,CAACM,IAAI,CAACC,GAAG,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACV,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACZO,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChB1B,KAAA,CAAAmB,aAAA,CAAChB,MAAM;IAACwB,SAAS,EAAC,uCAAuC;IAACC,OAAO,EAAExB,IAAK;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC3E1B,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5B1B,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChB1B,KAAA,CAAAmB,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChB1B,KAAA,CAAAmB,aAAA,CAACd,UAAU;IAACE,OAAO,EAAEA,OAAQ;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC9B,CACJ,CACJ,CACJ,CAAC;AAEd,CAAC;AAED,eAAepB,GAAG"},"metadata":{},"sourceType":"module"}