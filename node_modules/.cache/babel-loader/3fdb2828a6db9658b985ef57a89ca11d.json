{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0439\\u0434\\u0430\\u0440\\u0431\\u0435\\u043A\\\\Documents\\\\SpringBootProjects\\\\frontend-react\\\\src\\\\components\\\\CreateSongForm.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { getUser } from \"../helpers/auth_helper\";\nconst CreateSongForm = () => {\n  const [formData, setFormData] = useState({\n    title: '',\n    artist: '',\n    album: '',\n    genre: '',\n    songFile: null,\n    imageFile: null\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      files\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'file' ? files[0] : value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    const {\n      title,\n      artist,\n      album,\n      genre,\n      songFile,\n      imageFile\n    } = formData;\n    const data = new FormData();\n    data.append('songFile', songFile);\n    data.append('imageFile', imageFile);\n    data.append('title', title);\n    data.append('artist', artist);\n    data.append('album', album);\n    data.append('genre', genre);\n    try {\n      const response = await callApiPost(data);\n      console.log('Song created successfully:', response.data);\n      setIsLoading(false);\n      setErrorMessage('');\n      // Handle success or display a success message to the user\n    } catch (error) {\n      setIsLoading(false);\n      if (error.response && error.response.data) {\n        setErrorMessage(error.response.data);\n      } else {\n        setErrorMessage('Failed to create song. Please try again later.');\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: formData.title,\n    onChange: handleChange,\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"artist\",\n    value: formData.artist,\n    onChange: handleChange,\n    placeholder: \"Artist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"album\",\n    value: formData.album,\n    onChange: handleChange,\n    placeholder: \"Album\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"genre\",\n    value: formData.genre,\n    onChange: handleChange,\n    placeholder: \"Genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"songFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Select Song File:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"songFile\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"imageFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Select Image File:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"imageFile\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, isLoading ? 'Creating...' : 'Create Song'), errorMessage && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 30\n    }\n  }, errorMessage));\n};\nexport default CreateSongForm;\nconst callApiPost = data => {\n  return getUser().then(user => {\n    if (user && user.access_token) {\n      const headers = {\n        'Content-Type': 'multipart/form-data',\n        'Authorization': `Bearer ${user.access_token}`\n      };\n      return axios.post('http://localhost:8083/songs', data, {\n        headers\n      });\n    } else {\n      throw new Error('User is not logged in');\n    }\n  });\n};","map":{"version":3,"names":["React","useState","axios","getUser","CreateSongForm","formData","setFormData","title","artist","album","genre","songFile","imageFile","isLoading","setIsLoading","errorMessage","setErrorMessage","handleChange","e","name","value","type","files","target","handleSubmit","preventDefault","data","FormData","append","response","callApiPost","console","log","error","createElement","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","htmlFor","disabled","then","user","access_token","headers","post","Error"],"sources":["C:/Users/Айдарбек/Documents/SpringBootProjects/frontend-react/src/components/CreateSongForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {getUser} from \"../helpers/auth_helper\";\r\n\r\nconst CreateSongForm = () => {\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        artist: '',\r\n        album: '',\r\n        genre: '',\r\n        songFile: null,\r\n        imageFile: null,\r\n    });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, files } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: type === 'file' ? files[0] : value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        const { title, artist, album, genre, songFile, imageFile } = formData;\r\n        const data = new FormData();\r\n        data.append('songFile', songFile);\r\n        data.append('imageFile', imageFile);\r\n        data.append('title', title);\r\n        data.append('artist', artist);\r\n        data.append('album', album);\r\n        data.append('genre', genre);\r\n\r\n        try {\r\n            const response = await callApiPost(data);\r\n            console.log('Song created successfully:', response.data);\r\n            setIsLoading(false);\r\n            setErrorMessage('');\r\n            // Handle success or display a success message to the user\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            if (error.response && error.response.data) {\r\n                setErrorMessage(error.response.data);\r\n            } else {\r\n                setErrorMessage('Failed to create song. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={formData.title}\r\n                onChange={handleChange}\r\n                placeholder=\"Title\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"artist\"\r\n                value={formData.artist}\r\n                onChange={handleChange}\r\n                placeholder=\"Artist\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"album\"\r\n                value={formData.album}\r\n                onChange={handleChange}\r\n                placeholder=\"Album\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"genre\"\r\n                value={formData.genre}\r\n                onChange={handleChange}\r\n                placeholder=\"Genre\"\r\n            />\r\n            <label htmlFor=\"songFile\">Select Song File:</label>\r\n            <input type=\"file\" name=\"songFile\" onChange={handleChange} />\r\n            <label htmlFor=\"imageFile\">Select Image File:</label>\r\n            <input type=\"file\" name=\"imageFile\" onChange={handleChange} />\r\n            <button type=\"submit\" disabled={isLoading}>\r\n                {isLoading ? 'Creating...' : 'Create Song'}\r\n            </button>\r\n            {errorMessage && <p>{errorMessage}</p>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default CreateSongForm;\r\n\r\nconst callApiPost = (data) => {\r\n    return getUser().then(user => {\r\n        if (user && user.access_token) {\r\n            const headers = {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': `Bearer ${user.access_token}`,\r\n            };\r\n            return axios.post('http://localhost:8083/songs', data, { headers });\r\n        } else {\r\n            throw new Error('User is not logged in');\r\n        }\r\n    });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}