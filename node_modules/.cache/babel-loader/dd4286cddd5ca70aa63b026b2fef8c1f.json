{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0439\\u0434\\u0430\\u0440\\u0431\\u0435\\u043A\\\\Documents\\\\SpringBootProjects\\\\frontend-react\\\\src\\\\components\\\\MultiMatchSearch.js\";\nimport React, { useState } from 'react';\nimport { callApiPost } from './api'; // Import the callApiPost function\n\nconst MultiMatchSearch = () => {\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSearch = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const response = await callApiPost({\n        query\n      }); // Call the API with the user's query\n      setSearchResults(response.data); // Update search results state\n      setIsLoading(false);\n      setErrorMessage('');\n    } catch (error) {\n      setIsLoading(false);\n      if (error.response && error.response.data) {\n        setErrorMessage(error.response.data);\n      } else {\n        setErrorMessage('Failed to perform the search. Please try again later.');\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Multi-Match Search\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter your search query\",\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, isLoading ? 'Searching...' : 'Search')), errorMessage && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }\n  }, errorMessage), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, searchResults.map((result, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }))));\n};\nexport default MultiMatchSearch;","map":{"version":3,"names":["React","useState","callApiPost","MultiMatchSearch","query","setQuery","searchResults","setSearchResults","isLoading","setIsLoading","errorMessage","setErrorMessage","handleSearch","e","preventDefault","response","data","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","map","result","index","key"],"sources":["C:/Users/Айдарбек/Documents/SpringBootProjects/frontend-react/src/components/MultiMatchSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { callApiPost } from './api'; // Import the callApiPost function\r\n\r\nconst MultiMatchSearch = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await callApiPost({ query }); // Call the API with the user's query\r\n            setSearchResults(response.data); // Update search results state\r\n            setIsLoading(false);\r\n            setErrorMessage('');\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            if (error.response && error.response.data) {\r\n                setErrorMessage(error.response.data);\r\n            } else {\r\n                setErrorMessage('Failed to perform the search. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Multi-Match Search</h1>\r\n            <form onSubmit={handleSearch}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your search query\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                />\r\n                <button type=\"submit\" disabled={isLoading}>\r\n                    {isLoading ? 'Searching...' : 'Search'}\r\n                </button>\r\n            </form>\r\n            {errorMessage && <p>{errorMessage}</p>}\r\n            <div>\r\n                {/* Display search results here */}\r\n                {searchResults.map((result, index) => (\r\n                    <div key={index}>\r\n                        {/* Render each search result */}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MultiMatchSearch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}