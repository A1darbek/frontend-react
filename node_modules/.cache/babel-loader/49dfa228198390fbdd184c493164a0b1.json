{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0439\\u0434\\u0430\\u0440\\u0431\\u0435\\u043A\\\\Documents\\\\SpringBootProjects\\\\frontend-react\\\\src\\\\components\\\\AppContent.js\";\nimport * as React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { callApi } from '../helpers/axios_helper';\nimport { getUser, login, logout } from '../helpers/auth_helper';\nimport AuthContent from './AuthContent';\nimport Buttons from './Buttons';\nexport default class AppContent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.login = () => {\n      login();\n    };\n\n    this.callApi = () => {\n      callApi().then(response => {\n        this.setState({\n          api: response.data\n        });\n        toast.success('Api return successfully data, check in section - Api response');\n      }).catch(error => {\n        toast.error(error);\n      });\n    };\n\n    this.logout = () => {\n      logout();\n    };\n\n    this.getUser = () => {\n      getUser().then(user => {\n        if (user) {\n          toast.success('User has been successfully loaded from store.');\n        } else {\n          toast.info('You are not logged in.');\n        }\n\n        if (!this.shouldCancel) {\n          this.setState({\n            user\n          });\n        }\n      });\n    };\n\n    this.state = {\n      user: {},\n      api: \"\"\n    };\n    this.shouldCancel = false;\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  componentWillUnmount() {\n    this.shouldCancel = true;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Buttons, {\n      login: this.login,\n      logout: this.logout,\n      getUser: this.getUser,\n      callApi: this.callApi,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), this.state.api && /*#__PURE__*/React.createElement(AuthContent, {\n      data: this.state.api,\n      user: this.state.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 28\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Айдарбек/Documents/SpringBootProjects/frontend-react/src/components/AppContent.js"],"names":["React","ToastContainer","toast","callApi","getUser","login","logout","AuthContent","Buttons","AppContent","Component","constructor","props","then","response","setState","api","data","success","catch","error","user","info","shouldCancel","state","componentDidMount","componentWillUnmount","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,MAAzB,QAAuC,wBAAvC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AAEpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBP,KAVmB,GAUX,MAAM;AACVA,MAAAA,KAAK;AACR,KAZkB;;AAAA,SAcnBF,OAdmB,GAcT,MAAM;AACZA,MAAAA,OAAO,GACFU,IADL,CACUC,QAAQ,IAAI;AACd,aAAKC,QAAL,CAAc;AAAEC,UAAAA,GAAG,EAAEF,QAAQ,CAACG;AAAhB,SAAd;AACAf,QAAAA,KAAK,CAACgB,OAAN,CAAc,+DAAd;AACH,OAJL,EAKKC,KALL,CAKWC,KAAK,IAAI;AACZlB,QAAAA,KAAK,CAACkB,KAAN,CAAYA,KAAZ;AACH,OAPL;AAQH,KAvBkB;;AAAA,SA6BnBd,MA7BmB,GA6BV,MAAM;AACXA,MAAAA,MAAM;AACT,KA/BkB;;AAAA,SAiCnBF,OAjCmB,GAiCT,MAAM;AACZA,MAAAA,OAAO,GAAGS,IAAV,CAAeQ,IAAI,IAAI;AACnB,YAAIA,IAAJ,EAAU;AACNnB,UAAAA,KAAK,CAACgB,OAAN,CAAc,+CAAd;AACH,SAFD,MAEO;AACHhB,UAAAA,KAAK,CAACoB,IAAN,CAAW,wBAAX;AACH;;AAED,YAAI,CAAC,KAAKC,YAAV,EAAwB;AACpB,eAAKR,QAAL,CAAc;AAAEM,YAAAA;AAAF,WAAd;AACH;AACJ,OAVD;AAWH,KA7CkB;;AAEf,SAAKG,KAAL,GAAa;AAAEH,MAAAA,IAAI,EAAE,EAAR;AAAYL,MAAAA,GAAG,EAAE;AAAjB,KAAb;AACA,SAAKO,YAAL,GAAoB,KAApB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKrB,OAAL;AACH;;AAiBDsB,EAAAA,oBAAoB,GAAG;AACnB,SAAKH,YAAL,GAAoB,IAApB;AACH;;AAoBHI,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,OAAD;AACE,MAAA,KAAK,EAAE,KAAKtB,KADd;AAEE,MAAA,MAAM,EAAE,KAAKC,MAFf;AAGE,MAAA,OAAO,EAAE,KAAKF,OAHhB;AAIE,MAAA,OAAO,EAAE,KAAKD,OAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAUG,KAAKqB,KAAL,CAAWR,GAAX,iBAAkB,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAKQ,KAAL,CAAWR,GAA9B;AAAmC,MAAA,IAAI,EAAE,KAAKQ,KAAL,CAAWH,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVrB,CADF;AAcD;;AAhEqD","sourcesContent":["import * as React from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport { callApi } from '../helpers/axios_helper';\nimport { getUser, login, logout } from '../helpers/auth_helper';\n\nimport AuthContent from './AuthContent';\nimport Buttons from './Buttons';\n\nexport default class AppContent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { user: {}, api: \"\" };\n        this.shouldCancel = false;\n    }\n\n    componentDidMount() {\n        this.getUser();\n    }\n\n    login = () => {\n        login();\n    };\n\n    callApi = () => {\n        callApi()\n            .then(response => {\n                this.setState({ api: response.data });\n                toast.success('Api return successfully data, check in section - Api response');\n            })\n            .catch(error => {\n                toast.error(error);\n            });\n    };\n\n    componentWillUnmount() {\n        this.shouldCancel = true;\n    }\n\n    logout = () => {\n        logout();\n    };\n\n    getUser = () => {\n        getUser().then(user => {\n            if (user) {\n                toast.success('User has been successfully loaded from store.');\n            } else {\n                toast.info('You are not logged in.');\n            }\n\n            if (!this.shouldCancel) {\n                this.setState({ user });\n            }\n        });\n    };\n\n  render() {\n    return (\n      <>\n        <ToastContainer />\n\n        <Buttons\n          login={this.login}\n          logout={this.logout}\n          getUser={this.getUser}\n          callApi={this.callApi}\n        />\n\n        {this.state.api && <AuthContent data={this.state.api} user={this.state.user} />}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}